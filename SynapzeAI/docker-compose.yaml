services:
  postgres_tests_service:
    container_name: tests_service_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: tests_service_project
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5436:5432
    volumes:
      - postgres_tests_data:/var/lib/postgresql/data

  postgres_user_service:
    container_name: user_service_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: user_service_project
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5435:5432
    volumes:
      - postgres_user_data:/var/lib/postgresql/data

  postgres_payment_service:
    container_name: payment_service_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: payment_service_project
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5437:5432
    volumes:
      - postgres_payment_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.16.1
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    restart: always

  kibana:
    container_name: kibana
    image: kibana:8.16.1
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    restart: always

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    restart: always

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel
      - grafana-simple-json-datasource
    depends_on:
      - prometheus
    restart: always

  userservice-api:
    image: userservice-api:latest
    build:
      context: ./UserService
      dockerfile: src/UserService.API/Dockerfile

  #web_nginx:
    #image: nginx
    #hostname: web_nginx
    #container_name: web_nginx
    #restart: unless-stopped
    #environment:
      #TZ: "Europe/Moscow"
    #ports:
      #- 80:80
      #- 443:443
    #volumes:
      #- ./nginx/conf.d:/etc/nginx/conf.d
      #- ./nginx/ssl:/etc/nginx/ssl
      #- ./www_data:/usr/share/nginx/html
  
volumes:
  postgres_tests_data:
  postgres_user_data:
  postgres_payment_data:
  rabbitmq_data:
  elasticsearch-data:
  prometheus_data:
  grafana_data:
